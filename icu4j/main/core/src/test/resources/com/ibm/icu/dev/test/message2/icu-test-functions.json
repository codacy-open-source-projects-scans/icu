{
  "scenario": "Function tests",
  "description": "Tests for ICU-specific formatting behavior.",
  "defaultTestProperties": {
    "locale": "en-US"
  },
  "tests": [
    {
      "src": "Expires on {$exp}",
      "exp": "Expires on Sat, Aug 3, 2024, 9:43 PM",
      "comment": "Modified from ICU4J copy to add params (likewise with the other date/time tests); 1722746637000 is 2024-08-03 21:43:57 PDT",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :datetime}",
      "exp": "Expires on Sat, Aug 3, 2024, 9:43 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :datetime icu:skeleton=yMMMMdjmsSSEE}",
      "exp": "Expires on Sat, August 3, 2024 at 9:43:57.00 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }],
      "ignoreCpp": "ICU-22754 Skeleton option not implemented yet"
    },
    {
      "src": "Expires on {$exp :date fields=year-month-day-weekday length=long}",
      "exp": "Expires on Saturday, August 3, 2024",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :time precision=second timeZoneStyle=short}",
      "exp": "Expires on 9:43:57 PM PDT",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :time precision=second}",
      "exp": "Expires on 9:43:57 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :time precision=minute}",
      "exp": "Expires on 9:43 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :datetime dateFields=year-month-day-weekday dateLength=long timePrecision=second}",
      "exp": "Expires on Saturday, August 3, 2024 at 9:43:57 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :datetime icu:skeleton=yMMMM}",
      "exp": "Expires on August 2024",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Expires on {$exp :datetime dateFields=year-month-day dateLength=long timePrecision=minute}",
      "exp": "Expires on August 3, 2024 at 9:43 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "comment": "Make sure we ignore date / time fields if needed",
      "src": "Expires on {$exp :datetime dateFields=year-month-day-weekday dateLength=long timePrecision=minute}",
      "exp": "Expires on Saturday, August 3, 2024 at 9:43 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "comment": "Make sure we ignore date / time fields if needed",
      "src": "Expires at {$exp :time dateFields=year-month-day-weekday dateLength=long precision=minute}",
      "exp": "Expires at 9:43 PM",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "comment": "Horibly long, but I really wanted to test multiple declarations with overrides, and you can't join strings in JSON",
      "src": [
        ".input {$exp :time precision=minute}\n",
        ".input {$user :string}\n",
        ".local $longExp = {$exp :datetime dateFields=year-month-day dateLength=long timePrecision=minute}\n",
        ".local $zooExp = {$exp :datetime dateFields=year-month-day dateLength=short timePrecision=$timeOver timeZoneStyle=long}\n",
        "{{Hello John, you want '{$exp}', '{$longExp}', or '{$zooExp}' or even '{$exp :datetime dateFields=year-month-day-weekday dateLength=long timePrecision=minute}'?}}"
      ],
      "exp": "Hello John, you want '9:43 PM', 'August 3, 2024 at 9:43 PM', or '8/3/2024, 9:43:57 PM Pacific Daylight Time' or even 'Saturday, August 3, 2024 at 9:43 PM'?",
      "params": [{"name": "exp", "value": { "date": 1722746637000 }},
                 {"name": "user", "value": "John"},
                 {"name": "timeOver", "value": "second" }],
      "ignoreCpp": "ICU-22754 ICU4C doesn't implement this kind of function composition yet. See https://github.com/unicode-org/message-format-wg/issues/515"
    },
    {
      "src": [
        ".input {$exp :date fields=year-month-day length=short}\n",
        ".local $longExp = {$exp :date fields=year-month-day-weekday length=long}\n",
        "{{Expires on '{$exp}' ('{$longExp}').}}"
      ],
      "exp": "Expires on '8/3/2024' ('Saturday, August 3, 2024').",
      "params": [{ "name": "exp", "value": { "date": 1722746637000 } }]
    },
    {
      "src": "Format {$val} number",
      "params": [{ "name": "val", "value": 31 }],
      "exp": "Format 31 number"
    },
    {
      "src": "Format {123456789.9876} number",
      "locale": "en-IN",
      "exp": "Format 123456789.9876 number",
      "comment": "Number literals are not formatted as numbers by default"
    },
    {
      "src": "Format {|3.1416|} number",
      "locale": "ar-AR-u-nu-latn",
      "exp": "Format 3.1416 number"
    },
    {
      "src": "Format {|3.1416|} number",
      "locale": "ar-AR-u-nu-arab",
      "exp": "Format 3.1416 number",
      "comment": "Number literals are not formatted as numbers by default"
    },
    {
      "src": "Format {3.1415926 :number}",
      "exp": "Format 3.141593"
    },
    {
      "src": "Format {3.1415926 :number maximumFractionDigits=4}",
      "exp": "Format 3.1416"
    },
    {
      "src": "Format {3 :number minimumFractionDigits=2}",
      "exp": "Format 3.00"
    },
    {
      "src": "Format {3.2 :number minimumFractionDigits=2}",
      "exp": "Format 3.20"
    },
    {
      "src": "Format {123456789.97531 :number maximumSignificantDigits=4}",
      "exp": "Format 123,500,000"
    },
    {
      "src": "Format {3.1415926 :number}",
      "exp": "Format 3.141593"
    },
    {
      "src": "Numbering system {123456 :number numberingSystem=deva}",
      "exp": "Numbering system १२३,४५६"
    },
    {
      "src": "Scientific {123456789.97531 :number notation=scientific}",
      "exp": "Scientific 1.234568E8"
    },
    {
      "src": "Engineering {123456789.97531 :number notation=engineering}",
      "exp": "Engineering 123.45679E6"
    },
    {
      "src": "Compact {123456789.97531 :number notation=compact}",
      "exp": "Compact 123M"
    },
    {
      "src": "Compact {123456789.97531 :number notation=compact compactDisplay=long}",
      "exp": "Compact 123 million"
    },
    {
      "src": "Compact {123456789.97531 :number notation=compact compactDisplay=short}",
      "exp": "Compact 123M"
    }
  ]
}
